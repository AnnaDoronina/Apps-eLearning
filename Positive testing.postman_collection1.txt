{
	"info": {
		"_postman_id": "5e1dcf0c-34d1-462f-8dd8-c7df82ef1142",
		"name": "Positive testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "userCreate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"    pm.environment.set('userCreate', jsonData.data.userCreate);\r",
							"\r",
							"    const email = JSON.parse(pm.request.body.graphql.variables).email;\r",
							"          pm.environment.set('email', email);\r",
							"          console.log(JSON.parse(pm.request.body.graphql.variables).email);\r",
							"\r",
							"pm.test(\"response is ok\", function (){\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation userCreate ($email: String!, $password: String!) {\r\n    userCreate (email: $email, password: $password)\r\n}",
						"variables": "{\r\n  \"email\": \"88uuu@gmail.com\",\r\n  \"password\": \"12q12webbrtyuiop123\"\r\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "userActivate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"userActivate\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Activation Successful!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation userActivate ($activationLinkId: String!) {\r\n    userActivate (activationLinkId: $activationLinkId)\r\n}",
						"variables": "{\r\n  \"activationLinkId\": \"{{userCreate}}\"\r\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "userLogin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.environment.set('token', jsonData.data.login.accessToken);\r",
							"\r",
							"pm.test(\"login\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"accessToken\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query login ($email: String!, $password: String!) {\r\n    login (email: $email, password: $password) {\r\n        accessToken\r\n        user {\r\n            _id\r\n            email\r\n            firstName\r\n            lastName\r\n            phone\r\n            about\r\n            image\r\n            jobTitle\r\n            level\r\n            languages\r\n            roles\r\n            links\r\n            starredProblems\r\n            starredPublications\r\n            lastAccess\r\n            createdAt\r\n            updatedAt\r\n            isActivated\r\n            activationLinkId\r\n        }\r\n    }\r\n}",
						"variables": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"12q12webbrtyuiop123\"\r\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "publicationCreate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"publicationCreate\", function () {\r",
							"    let values = {}\r",
							"    for(let key in values){\r",
							" pm.expect(values[key]).to.be.a('string');\r",
							"    } \r",
							"});\r",
							"pm.test(\"publicationCreate\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Publication created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation publicationCreate ($values: PublicationInput) {\r\n    publicationCreate (values: $values)\r\n}",
						"variables": "{\r\n  \"values\": {\r\n    \"title\": \"test12.CreatingPubFromPostmatCollection\",\r\n    \"description\": \"test1\",\r\n    \"content\": \"postman test\",\r\n    \"image\": \"no\"\r\n  }\r\n}"
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}